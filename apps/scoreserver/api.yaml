apiVersion: apps/v1
kind: Deployment
metadata:
    namespace: __VAR__NAMESPACE
    name: api
    labels:
      app: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      # restartPolicy: OnFailure
      initContainers:
      - name: waitdb
        image: jwilder/dockerize
        args: ['sh', '-c', 'dockerize -wait tcp://redis:6379 -timeout 100s', 'dockerize -wait tcp://db:5432 -timeout 100s']
      containers:
      - image: __VAR__API_IMAGE
        imagePullPolicy: Always
        name: api
        ports:
          - containerPort: 3000
        envFrom:
          - configMapRef:
              name: api-env
        args:
          - sh
          - -c
          - " if [ -f \"tmp/pids/server.pid\" ]; then rm tmp/pids/server.pid; fi\n
           bundle exec rails server -b 0.0.0.0;"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-env
  namespace: __VAR__NAMESPACE
data:
  TZ: __VAR__TZ
  API_STAFF_PASSWORD: __VAR__API_STAFF_PASSWORD
  API_SESSION_EXPIRE_MINUTES: __VAR__API_SESSION_EXPIRE_MINUTES
  POSTGRES_HOST: __VAR__POSTGRES_HOST
  POSTGRES_USER: __VAR__POSTGRES_USER
  POSTGRES_PASSWORD: __VAR__POSTGRES_PASSWORD
  POSTGRES_MAX_CONNECTIONS: __VAR__POSTGRES_MAX_CONNECTIONS
  POSTGRES_SHARED_BUFFERS: __VAR__POSTGRES_SHARED_BUFFERS
  POSTGRES_WORK_MEM: __VAR__POSTGRES_WORK_MEM
  RAILS_ENV: __VAR__STAGE_ENV
  NODE_ENV: __VAR__STAGE_ENV
  REDIS_URL: __VAR__REDIS_URL
  PLASMA_SUBSCRIBER_REDIS_CHANNELS: __VAR__PLASMA_SUBSCRIBER_REDIS_CHANNELS
  SLACK_WEBHOOK_URL: __VAR__SLACK_WEBHOOK_URL
---
apiVersion: v1
kind: Service
metadata:
  namespace: __VAR__NAMESPACE
  name: api
spec:
  selector:
    app: api
  type: ClusterIP
  ports:
    - port: 3000
